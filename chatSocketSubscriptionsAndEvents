subscriptions:

// Creates a channel
'createChannel', { CreateChannelDto }

// Deletes a channel and everything related to it, only owner should be able to do it
'delete', { cIdDto } 

// Session user joins a channel. If protected, I need to give a password as well
'join', { JoinChannelDto }

// Gets the channels and DMs that the session user is in
'getUsersChannels'

// Gets all existing channels, except private ones
'getAllChannels'

// Gets all the messages inside channel
'getChannelMessages', { cIdDto }

// Session user leaves channel
'leave', { cIdDto }

// Session user makes another user admin
'addAdmin', { UpdateChannelDto }

// Session user removes user from admins array
'delAdmin', { UpdateChannelDto }

// Session user removes user from channel
'kick'/'(un)ban'/'(un)mute' { UpdateChannelDto }

// Send direct message to user. Creates a channel between the two users
'privMsg', { PrivMsgDto }

// Doesn't do shit for me
'getChannel', { cIdDto }

// Sending a message to a channel
'newMsg', { CreateMessageDto }

// Use when you want to change, add or remove a password.
// Usage: If there is no password already, I fill in newPass to make channel protected
//  If there is a password already, I fill in newPass to change the password. Or I can send the oldPass only to remove password protection
'password', { ChannelPasswordDto }

// Session user invites user to channel
'inviteToPriv', { UpdateChannelDto}

// Session user declines invitation to private channel
'declineToPriv', { cIdDto }


events:

// Backend emits error
'error', error: any

// Backend emits success
'success', (to be determined)

// Backend emits all channels the session user is in
'usersChannels', Channel[] -> ChannelToFeDto[]

// Backend emits all channels available except private ones
'allChannels', Channel[] -> ChannelToFeDto[]

// Incoming messages. Need to compare with current channelid to see if I need to display or not
'incMsg', { Message }

// Fetch channel messages. Should always be subscribed to. Changes when we emit different getChannelMessages to socket
'channelMessages', Message[]

// I'm probably not gonna need this. I don't know what it does though
'channel', ChannelToFeDto
