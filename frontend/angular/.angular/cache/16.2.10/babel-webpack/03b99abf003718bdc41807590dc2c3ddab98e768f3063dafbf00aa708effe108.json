{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../message/message.component\";\nimport * as i5 from \"./channel-messages-settings/channel-messages-settings.component\";\nconst _c0 = [\"messageContainer\"];\nfunction ChannelMessagesContentComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChannelMessagesContentComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-message\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"msg\", message_r4)(\"sameSender\", true ? i_r5 > 0 && ctx_r2.fetchedMessages[i_r5 - 1].user === message_r4.user : false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.scrollToBottom(), \" \");\n  }\n}\nfunction ChannelMessagesContentComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-message\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"msg\", message_r6)(\"sameSender\", true ? i_r7 > 0 && ctx_r3.incomingMessages[i_r7 - 1].user === message_r6.user : false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.scrollToBottom(), \" \");\n  }\n}\nexport let ChannelMessagesContentComponent = /*#__PURE__*/(() => {\n  class ChannelMessagesContentComponent {\n    constructor(chatService) {\n      this.chatService = chatService;\n      this.channelChange = new EventEmitter();\n      this.fetchedMessages = [];\n      this.incomingMessages = [];\n      this.loading = false;\n      this.isSettingsOpen = false;\n    }\n    ngOnInit() {\n      this.chatService.getChannelMessages().subscribe(messages => this.fetchedMessages = messages);\n      this.chatService.getIncomingMessages().subscribe(message => {\n        if (message.channel.id === this.channel?.id) {\n          this.incomingMessages.push(message);\n        }\n      });\n    }\n    ngOnChanges(changes) {\n      if (changes['channel']) {\n        this.incomingMessages = [];\n      }\n    }\n    sendMessage() {\n      if (this.messageToSend === undefined || this.channel === undefined) return;\n      this.messageToSend = this.messageToSend.trim();\n      if (!this.messageToSend) return;\n      this.chatService.sendMessage(this.channel?.id, this.messageToSend);\n      this.scrollToBottom();\n      this.messageToSend = '';\n    }\n    scrollToBottom() {\n      this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight;\n    }\n    openSettings() {\n      this.isSettingsOpen = true;\n    }\n    channelChangeEvent(channel) {\n      this.channelChange.emit(channel);\n    }\n    static #_ = this.ɵfac = function ChannelMessagesContentComponent_Factory(t) {\n      return new (t || ChannelMessagesContentComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChannelMessagesContentComponent,\n      selectors: [[\"app-channel-messages-content\"]],\n      viewQuery: function ChannelMessagesContentComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageContainer = _t.first);\n        }\n      },\n      inputs: {\n        channel: \"channel\"\n      },\n      outputs: {\n        channelChange: \"channelChange\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 11,\n      vars: 6,\n      consts: [[\"src\", \"data:image/svg+xml,%3Csvg width='48' height='48' xmlns='http://www.w3.org/2000/svg' xmlns:svg='http://www.w3.org/2000/svg'%3E%3Cg class='layer'%3E%3Ctitle%3ELayer 1%3C/title%3E%3Cpath d='m0,0l48,0l0,48l-48,0l0,-48z' fill='none' id='svg_1' transform='matrix(1, 0, 0, 1, 0, 0)'/%3E%3Cpath d='m38.86,25.95c0.08,-0.64 0.14,-1.29 0.14,-1.95s-0.06,-1.31 -0.14,-1.95l4.23,-3.31c0.38,-0.3 0.49,-0.84 0.24,-1.28l-4,-6.93c-0.25,-0.43 -0.77,-0.61 -1.22,-0.43l-4.98,2.01c-1.03,-0.79 -2.16,-1.46 -3.38,-1.97l-0.75,-5.3c-0.09,-0.47 -0.5,-0.84 -1,-0.84l-8,0c-0.5,0 -0.91,0.37 -0.99,0.84l-0.75,5.3c-1.22,0.51 -2.35,1.17 -3.38,1.97l-4.98,-2.01c-0.45,-0.17 -0.97,0 -1.22,0.43l-4,6.93c-0.25,0.43 -0.14,0.97 0.24,1.28l4.22,3.31c-0.08,0.64 -0.14,1.29 -0.14,1.95s0.06,1.31 0.14,1.95l-4.22,3.31c-0.38,0.3 -0.49,0.84 -0.24,1.28l4,6.93c0.25,0.43 0.77,0.61 1.22,0.43l4.98,-2.01c1.03,0.79 2.16,1.46 3.38,1.97l0.75,5.3c0.08,0.47 0.49,0.84 0.99,0.84l8,0c0.5,0 0.91,-0.37 0.99,-0.84l0.75,-5.3c1.22,-0.51 2.35,-1.17 3.38,-1.97l4.98,2.01c0.45,0.17 0.97,0 1.22,-0.43l4,-6.93c0.25,-0.43 0.14,-0.97 -0.24,-1.28l-4.22,-3.31zm-14.86,5.05c-3.87,0 -7,-3.13 -7,-7s3.13,-7 7,-7s7,3.13 7,7s-3.13,7 -7,7z' fill='%23e8dab2' id='svg_2'/%3E%3C/g%3E%3C/svg%3E\", 1, \"settings-button\", 3, \"click\"], [3, \"isOpen\", \"channel\", \"isOpenChange\", \"channelChangeEvent\"], [\"class\", \"loading-screen\", 4, \"ngIf\"], [1, \"message-container\"], [\"messageContainer\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"message-box\"], [\"type\", \"text\", \"placeholder\", \"Message\", \"autofocus\", \"\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [1, \"send-button\", 3, \"click\"], [\"src\", \"data:image/svg+xml,%3Csvg width='30' height='30' xmlns='http://www.w3.org/2000/svg' xmlns:svg='http://www.w3.org/2000/svg'%3E%3Cmetadata id='metadata819'%3Eimage/svg+xml%3C/metadata%3E%3Cg class='layer'%3E%3Ctitle%3ELayer 1%3C/title%3E%3Cg id='layer1'%3E%3Cpath d='m25.54191,14.95809c0,-1.11962 -1,-1.5 -1,-1.5l-20,-8l3.60352,8.56055l9.39648,0.93945l-9.39648,0.93945l-3.60352,8.56055l20,-8c0,0 1,-0.38038 1,-1.5z' fill='%23e8dab2' id='rect820' stroke-miterlimit='4' stroke-width='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"], [1, \"loading-screen\"], [1, \"loader\"], [3, \"msg\", \"sameSender\"]],\n      template: function ChannelMessagesContentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"img\", 0);\n          i0.ɵɵlistener(\"click\", function ChannelMessagesContentComponent_Template_img_click_0_listener() {\n            return ctx.openSettings();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(1, \"app-channel-messages-settings\", 1);\n          i0.ɵɵlistener(\"isOpenChange\", function ChannelMessagesContentComponent_Template_app_channel_messages_settings_isOpenChange_1_listener($event) {\n            return ctx.isSettingsOpen = $event;\n          })(\"channelChangeEvent\", function ChannelMessagesContentComponent_Template_app_channel_messages_settings_channelChangeEvent_1_listener($event) {\n            return ctx.channelChangeEvent($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, ChannelMessagesContentComponent_div_2_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3, 4);\n          i0.ɵɵtemplate(5, ChannelMessagesContentComponent_div_5_Template, 3, 3, \"div\", 5);\n          i0.ɵɵtemplate(6, ChannelMessagesContentComponent_div_6_Template, 3, 3, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"textarea\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function ChannelMessagesContentComponent_Template_textarea_ngModelChange_8_listener($event) {\n            return ctx.messageToSend = $event;\n          })(\"keyup.enter\", function ChannelMessagesContentComponent_Template_textarea_keyup_enter_8_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 8);\n          i0.ɵɵlistener(\"click\", function ChannelMessagesContentComponent_Template_div_click_9_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵelement(10, \"img\", 9);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"isOpen\", ctx.isSettingsOpen)(\"channel\", ctx.channel);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.fetchedMessages);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.incomingMessages);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.messageToSend);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MessageComponent, i5.ChannelMessagesSettingsComponent],\n      styles: [\".settings-button[_ngcontent-%COMP%]{position:absolute;width:2.7dvw;top:1dvw;right:1.5dvw;opacity:40%;filter:drop-shadow(0 .1dvw .2dvw rgba(0,0,0,.4));transform:rotate(0);animation:_ngcontent-%COMP%_animate-button-reverse 1s 1 cubic-bezier(.075,.82,.165,1)}.settings-button[_ngcontent-%COMP%]:hover{cursor:pointer;opacity:100%;filter:drop-shadow(0 .1dvw .2dvw rgba(0,0,0,.8));transform:rotate(30deg);animation:_ngcontent-%COMP%_animate-button 1s 1 cubic-bezier(.075,.82,.165,1)}@keyframes _ngcontent-%COMP%_animate-button{0%{filter:drop-shadow(0 .1dvw .2dvw rgba(0,0,0,.4));transform:rotate(0)}to{filter:drop-shadow(0 .1dvw .2dvw rgba(0,0,0,.8));transform:rotate(30deg)}}@keyframes _ngcontent-%COMP%_animate-button-reverse{0%{filter:drop-shadow(0 .1dvw .2dvw rgba(0,0,0,.8));transform:rotate(30deg)}to{filter:drop-shadow(0 .1dvw .2dvw rgba(0,0,0,.4));transform:rotate(0)}}.loading-screen[_ngcontent-%COMP%]{position:absolute;background-color:#4f6d7a;height:56dvh;width:100%}.loader[_ngcontent-%COMP%]{position:absolute;top:45%;left:50%;transform:translate(-50%,-50%);border:.5dvh solid #4F6D7A;border-top:.5dvh solid #E8DAB2;border-radius:50%;width:3dvh;height:3dvh;animation:_ngcontent-%COMP%_spin 2s cubic-bezier(.075,.82,.165,1) infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.message-container[_ngcontent-%COMP%]{margin-top:1.4dvh;padding-left:2dvw;padding-right:2dvw;height:53.7dvh;overflow:auto}.message-box[_ngcontent-%COMP%]{box-sizing:border-box;height:15dvh;margin-top:3dvh;margin-left:2dvw;margin-right:2dvw;bottom:.9dvh;position:relative}.message-box[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{all:unset;box-sizing:border-box;resize:none;width:100%;height:15dvh;background-color:#e8dab2;border-radius:2dvw;border:.3dvw solid #E8DAB2;white-space:pre-wrap;word-wrap:break-word;overflow-y:auto;overflow-x:hidden;padding-left:2dvw;padding-right:5dvw;padding-top:1.6dvh;font-family:Quattrocento,serif;font-size:1.3dvw;font-weight:700;color:#423b0b;caret-color:#423b0b;scrollbar-width:none}.message-box[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]:focus{border:.3dvw solid #5f5948}.send-button[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:1.7dvw;background-color:#5f5948;border-radius:.5dvw;padding:.2dvh .3dvw;position:absolute;top:35%;right:3.5%}.send-button[_ngcontent-%COMP%]:hover{cursor:pointer}.send-button[_ngcontent-%COMP%]:hover   img[_ngcontent-%COMP%]{background-color:#494437}\"]\n    });\n  }\n  return ChannelMessagesContentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}