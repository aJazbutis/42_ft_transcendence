{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Socket } from 'ngx-socket-io';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HOST_IP } from './Constants';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let UserSocket = /*#__PURE__*/(() => {\n  class UserSocket extends Socket {\n    constructor() {\n      super({\n        url: `${HOST_IP}/profile`,\n        options: {\n          withCredentials: true\n        }\n      });\n    }\n    static #_ = this.ɵfac = function UserSocket_Factory(t) {\n      return new (t || UserSocket)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserSocket,\n      factory: UserSocket.ɵfac\n    });\n  }\n  return UserSocket;\n})();\nexport let GameSocket = /*#__PURE__*/(() => {\n  class GameSocket extends Socket {\n    constructor() {\n      super({\n        url: `${HOST_IP}/game`,\n        options: {\n          withCredentials: true\n        }\n      });\n      this.connectionSubject = new Subject();\n      this.connection$ = this.connectionSubject.asObservable();\n      this.ioSocket.on('connect', () => {\n        console.log(\" INJECTABLE GOT CONNECTION\");\n        this.connectionSubject.next(true);\n      });\n      this.ioSocket.on('disconnect', () => {\n        console.log(\" INJECTABLE GOT DISCONNECTION\");\n        this.connectionSubject.next(false);\n      });\n    }\n    connection() {\n      this.ioSocket.connect();\n      this.connectionSubject.next(true);\n    }\n    disconnection() {\n      this.ioSocket.disconnect();\n      this.connectionSubject.next(false);\n    }\n    static #_ = this.ɵfac = function GameSocket_Factory(t) {\n      return new (t || GameSocket)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GameSocket,\n      factory: GameSocket.ɵfac\n    });\n  }\n  return GameSocket;\n})();\nexport let ChatSocket = /*#__PURE__*/(() => {\n  class ChatSocket extends Socket {\n    constructor() {\n      super({\n        url: `${HOST_IP}/chat`,\n        options: {\n          withCredentials: true\n        }\n      });\n    }\n    static #_ = this.ɵfac = function ChatSocket_Factory(t) {\n      return new (t || ChatSocket)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ChatSocket,\n      factory: ChatSocket.ɵfac\n    });\n  }\n  return ChatSocket;\n})();\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static #_ = this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [GameSocket, ChatSocket, UserSocket],\n      imports: [BrowserModule, BrowserAnimationsModule, AppRoutingModule, HttpClientModule, FormsModule]\n    });\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}