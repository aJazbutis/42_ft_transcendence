{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChannelCreationMenuComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 3);\n    i0.ɵɵtext(2, \"Private Channel Setup.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"This type of channel is invite-only and it's not visible for the public in the list of channels.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 4);\n    i0.ɵɵtext(6, \"Choose a channel name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 5, 6);\n    i0.ɵɵlistener(\"ngModelChange\", function ChannelCreationMenuComponent_div_2_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.channelName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ChannelCreationMenuComponent_div_2_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.toggle());\n    });\n    i0.ɵɵtext(10, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ChannelCreationMenuComponent_div_2_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.createChannel());\n    });\n    i0.ɵɵtext(12, \"Create\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(8);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵclassProp(\"is-invalid\", _r3.invalid);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.channelName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"btn-invalid\", _r3.invalid);\n    i0.ɵɵproperty(\"disabled\", _r3.invalid);\n  }\n}\nfunction ChannelCreationMenuComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 3);\n    i0.ɵɵtext(2, \"Protected Channel Setup.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"This type of channel is visible for the public in the list of channels, but only users who enter the correct password are permitted to access it.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 4);\n    i0.ɵɵtext(6, \"Choose a channel name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 5, 6);\n    i0.ɵɵlistener(\"ngModelChange\", function ChannelCreationMenuComponent_div_3_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.channelName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\", 9);\n    i0.ɵɵtext(10, \"Choose a password for your channel:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 10, 11);\n    i0.ɵɵlistener(\"ngModelChange\", function ChannelCreationMenuComponent_div_3_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.channelPassword = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ChannelCreationMenuComponent_div_3_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.toggle());\n    });\n    i0.ɵɵtext(14, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ChannelCreationMenuComponent_div_3_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.createChannel());\n    });\n    i0.ɵɵtext(16, \"Create\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r8 = i0.ɵɵreference(8);\n    const _r9 = i0.ɵɵreference(12);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵclassProp(\"is-invalid\", _r8.invalid);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.channelName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"is-invalid\", _r9.invalid);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.channelPassword);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"btn-invalid\", _r8.invalid || _r9.invalid);\n    i0.ɵɵproperty(\"disabled\", _r8.invalid && _r9.invalid);\n  }\n}\nfunction ChannelCreationMenuComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 3);\n    i0.ɵɵtext(2, \"Public Channel Setup.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"This type of channel is visible for the public in the list of channels, anyone can access it.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 4);\n    i0.ɵɵtext(6, \"Choose a channel name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 5, 6);\n    i0.ɵɵlistener(\"ngModelChange\", function ChannelCreationMenuComponent_div_4_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.channelName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ChannelCreationMenuComponent_div_4_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.toggle());\n    });\n    i0.ɵɵtext(10, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ChannelCreationMenuComponent_div_4_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.createChannel());\n    });\n    i0.ɵɵtext(12, \"Create\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r15 = i0.ɵɵreference(8);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵclassProp(\"is-invalid\", _r15.invalid);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.channelName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"btn-invalid\", _r15.invalid);\n    i0.ɵɵproperty(\"disabled\", _r15.invalid);\n  }\n}\nexport let ChannelCreationMenuComponent = /*#__PURE__*/(() => {\n  class ChannelCreationMenuComponent {\n    constructor(chatService) {\n      this.chatService = chatService;\n      this.isOpenChange = new EventEmitter();\n      this.channelName = '';\n    }\n    toggle() {\n      this.isOpen = !this.isOpen;\n      this.isOpenChange.emit(this.isOpen);\n    }\n    createChannel() {\n      if (!this.channelType) return; // Just for typescript\n      this.chatService.createChannel({\n        name: this.channelName,\n        type: this.channelType,\n        private: this.channelType === 'private',\n        password: this.channelPassword\n      });\n      this.channelName = '';\n      this.channelPassword = '';\n      this.toggle();\n    }\n    static #_ = this.ɵfac = function ChannelCreationMenuComponent_Factory(t) {\n      return new (t || ChannelCreationMenuComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChannelCreationMenuComponent,\n      selectors: [[\"app-channel-creation-menu\"]],\n      inputs: {\n        channelType: \"channelType\",\n        isOpen: \"isOpen\"\n      },\n      outputs: {\n        isOpenChange: \"isOpenChange\"\n      },\n      decls: 5,\n      vars: 4,\n      consts: [[1, \"channel-creation-menu-border\"], [1, \"channel-creation-menu\"], [4, \"ngIf\"], [1, \"title\"], [\"for\", \"channel-name\"], [\"type\", \"text\", \"id\", \"channel-name\", \"required\", \"\", \"minlength\", \"2\", \"maxlength\", \"20\", \"pattern\", \"[^\\\\s]*\", 3, \"ngModel\", \"ngModelChange\"], [\"channelname\", \"ngModel\"], [1, \"close\", 3, \"click\"], [1, \"change-btn\", 3, \"disabled\", \"click\"], [\"for\", \"channel-password\"], [\"type\", \"password\", \"id\", \"channel-password\", \"required\", \"\", \"minlength\", \"8\", \"maxlength\", \"20\", \"pattern\", \"[^\\\\s]*\", 3, \"ngModel\", \"ngModelChange\"], [\"channelpassword\", \"ngModel\"]],\n      template: function ChannelCreationMenuComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtemplate(2, ChannelCreationMenuComponent_div_2_Template, 13, 6, \"div\", 2);\n          i0.ɵɵtemplate(3, ChannelCreationMenuComponent_div_3_Template, 17, 9, \"div\", 2);\n          i0.ɵɵtemplate(4, ChannelCreationMenuComponent_div_4_Template, 13, 6, \"div\", 2);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"@openClose\", ctx.isOpen ? \"open\" : \"closed\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.channelType === \"private\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.channelType === \"protected\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.channelType === \"public\");\n        }\n      },\n      dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.RequiredValidator, i3.MinLengthValidator, i3.MaxLengthValidator, i3.PatternValidator, i3.NgModel],\n      styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Bodoni+Moda:ital,opsz,wght@1,6..96,700&display=swap\\\";.channel-creation-menu-border[_ngcontent-%COMP%]{position:absolute;width:40%;z-index:3;border:.1dvw solid #2f424a;box-sizing:border-box;filter:drop-shadow(0 .1dvw .2dvw rgba(0,0,0,.8));left:0%}.channel-creation-menu[_ngcontent-%COMP%]{box-sizing:border-box;background-color:#4f6d7a;border:.7dvw solid #E8DAB2}.title[_ngcontent-%COMP%]{margin:5%;color:#2f424a;font-family:Bodoni Moda,serif;font-size:1.5dvw;text-align:center;justify-content:center}.is-invalid[_ngcontent-%COMP%]{border-bottom:.1dvw solid #b04343}.btn-invalid[_ngcontent-%COMP%], .btn-invalid[_ngcontent-%COMP%]:hover{color:#2b3a41;background-color:#988e6f}p[_ngcontent-%COMP%]{margin:0% 10% 5%;padding:0%;font-family:Quattrocento,serif;font-weight:bolder;color:#2f424a;font-size:.7dvw}label[_ngcontent-%COMP%]{display:block;margin-left:10%;font-size:1dvw;font-family:Quattrocento,serif;font-weight:bolder;color:#e8dab2}input[_ngcontent-%COMP%]{display:block;margin:3% 10% 7%;padding:3%;width:74%;font-size:.9dvw;font-family:Quattrocento,serif;font-weight:bolder;border:none;border-bottom:.1dvw solid #E8DAB2;background-color:#425c68;color:#e8dab2;outline:none}button[_ngcontent-%COMP%]{color:#4f6d7a;background-color:#e8dab2;font-size:1.2dvw;font-family:Quattrocento,serif;font-weight:bolder;border:none;cursor:pointer;align-self:center;justify-self:center;height:4.5dvh;width:5.5dvw;border:.2dvh solid #2f424a}button[_ngcontent-%COMP%]:hover{background-color:#e9d5a1}.close[_ngcontent-%COMP%]{margin:0% 10% 7%}.change-btn[_ngcontent-%COMP%]{margin:0% 10% 7%;float:right}\"],\n      data: {\n        animation: [trigger('openClose', [state('open', style({\n          width: '40%',\n          left: '0%'\n        })), state('closed', style({\n          width: '40%',\n          left: '-42%'\n        })), transition('open <=> closed', [animate('.7s cubic-bezier(.49,.07,.39,.93)')])])]\n      }\n    });\n  }\n  return ChannelCreationMenuComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}